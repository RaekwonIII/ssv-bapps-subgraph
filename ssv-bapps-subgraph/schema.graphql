type BAppMetadataURIUpdated @entity(immutable: true) {
  id: Bytes!
  bAppAddress: Bytes! # address
  metadataURI: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BAppOptedInByStrategy @entity(immutable: true) {
  id: Bytes!
  strategyId: BigInt! # uint256
  bApp: Bytes! # address
  data: Bytes! # bytes
  tokens: [Bytes!]! # address[]
  obligationPercentages: [BigInt!]! # uint32[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BAppRegistered @entity(immutable: true) {
  id: Bytes!
  bAppAddress: Bytes! # address
  owner: Bytes! # address
  tokens: [Bytes!]! # address[]
  sharedRiskLevel: [BigInt!]! # uint32[]
  metadataURI: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BAppTokensCreated @entity(immutable: true) {
  id: Bytes!
  bAppAddress: Bytes! # address
  tokens: [Bytes!]! # address[]
  sharedRiskLevels: [BigInt!]! # uint32[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BAppTokensUpdated @entity(immutable: true) {
  id: Bytes!
  bAppAddress: Bytes! # address
  tokens: [Bytes!]! # address[]
  sharedRiskLevels: [BigInt!]! # uint32[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DelegationCreated @entity(immutable: true) {
  id: Bytes!
  delegator: Bytes! # address
  receiver: Bytes! # address
  percentage: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DelegationRemoved @entity(immutable: true) {
  id: Bytes!
  delegator: Bytes! # address
  receiver: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DelegationUpdated @entity(immutable: true) {
  id: Bytes!
  delegator: Bytes! # address
  receiver: Bytes! # address
  percentage: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Initialized @entity(immutable: true) {
  id: Bytes!
  version: BigInt! # uint64
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MaxFeeIncrementSet @entity(immutable: true) {
  id: Bytes!
  newMaxFeeIncrement: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ObligationCreated @entity(immutable: true) {
  id: Bytes!
  strategyId: BigInt! # uint256
  bApp: Bytes! # address
  token: Bytes! # address
  obligationPercentage: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ObligationUpdateProposed @entity(immutable: true) {
  id: Bytes!
  strategyId: BigInt! # uint256
  account: Bytes! # address
  token: Bytes! # address
  percentage: BigInt! # uint32
  finalizeTime: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ObligationUpdated @entity(immutable: true) {
  id: Bytes!
  strategyId: BigInt! # uint256
  bApp: Bytes! # address
  token: Bytes! # address
  obligationPercentage: BigInt! # uint256
  isFast: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type StrategyCreated @entity(immutable: true) {
  id: Bytes!
  strategyId: BigInt! # uint256
  owner: Bytes! # address
  fee: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type StrategyDeposit @entity(immutable: true) {
  id: Bytes!
  strategyId: BigInt! # uint256
  contributor: Bytes! # address
  token: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type StrategyFeeUpdateProposed @entity(immutable: true) {
  id: Bytes!
  strategyId: BigInt! # uint256
  owner: Bytes! # address
  proposedFee: BigInt! # uint32
  fee: BigInt! # uint32
  expirationTime: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type StrategyFeeUpdated @entity(immutable: true) {
  id: Bytes!
  strategyId: BigInt! # uint256
  owner: Bytes! # address
  fee: BigInt! # uint32
  oldFee: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type StrategyWithdrawal @entity(immutable: true) {
  id: Bytes!
  strategyId: BigInt! # uint256
  contributor: Bytes! # address
  token: Bytes! # address
  amount: BigInt! # uint256
  isFast: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type StrategyWithdrawalProposed @entity(immutable: true) {
  id: Bytes!
  strategyId: BigInt! # uint256
  account: Bytes! # address
  token: Bytes! # address
  amount: BigInt! # uint256
  finalizeTime: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Upgraded @entity(immutable: true) {
  id: Bytes!
  implementation: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
